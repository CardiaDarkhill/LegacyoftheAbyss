<Project Sdk="Microsoft.NET.Sdk">

  <!-- 
  Imports silksong path properties only if present in order to allow CI builds. The file should be gitignored.
  If you are checking out from git and need to create a new one, you can use `dotnet new silksongpath` to generate one.
  -->
  <Import Condition="Exists('SilksongPath.props')" Project="SilksongPath.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    <RestoreAdditionalProjectSources>
        https://nuget.bepinex.dev/v3/index.json
    </RestoreAdditionalProjectSources>
	  <!--Allow access of private members at runtime.-->
	<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <!--These properties will control the generated PluginInfo. Version is also used by various parts of the build system.-->
    <BepInExPluginGuid>legacyoftheabyss</BepInExPluginGuid>
    <BepInExPluginName>legacyoftheabyss</BepInExPluginName>
    <Version>0.1.0</Version>
  </PropertyGroup>

  <PropertyGroup>
    <DistributionVersion Condition="'$(DistributionVersion)' == ''">$(Version)</DistributionVersion>
    <ReleasePackagingRoot>$(MSBuildProjectDirectory)/obj/$(Configuration)</ReleasePackagingRoot>
    <NexusPackageRoot>$(ReleasePackagingRoot)/Nexus/$(TargetName)-$(DistributionVersion)</NexusPackageRoot>
    <ThunderstorePackageRoot>$(ReleasePackagingRoot)/Thunderstore/$(TargetName)-$(DistributionVersion)</ThunderstorePackageRoot>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="1.1.0" />
    <PackageReference Include="UnityEngine.Modules" Version="6000.0.50" IncludeAssets="compile" />
    <!--If you're unable resolve this dependency, check that you're using the nuget v3 package feed instead of v2.-->
    <PackageReference Include="Silksong.GameLibs" Version="1.0.2-silksong1.0.28561"/>
  </ItemGroup>

  <ItemGroup>
    <None Update="Assets\charm_placements.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Tests\**\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="**\obj\**\*.cs" />
    <Compile Remove="**\bin\**\*.cs" />
    <Compile Remove="**\Decompiles\**\*.cs" />
  </ItemGroup>

  <Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="'$(SilksongFolder)' != ''">
      <ItemGroup>
          <Binaries Include="$(TargetPath)"/>
          <Binaries Include="$(TargetDir)/$(TargetName).pdb"/>
          <ModAssets Include="Assets\charm_placements.json" />
      </ItemGroup>

      <Copy SourceFiles="@(Binaries)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)" />
      <MakeDir Directories="$(SilksongFolder)/BepInEx/plugins/$(TargetName)/Assets" />
      <Copy SourceFiles="@(ModAssets)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)/Assets" SkipUnchangedFiles="true" />

      <PropertyGroup>
          <ExportFolder>bin/Publish</ExportFolder>
      </PropertyGroup>

      <RemoveDir Directories="$(IntermediateOutputPath)/archive"/>
      <MakeDir Directories="$(ExportFolder)"/>
      <Copy SourceFiles="@(Binaries)" DestinationFolder="$(IntermediateOutputPath)/archive"/>
      <MakeDir Directories="$(IntermediateOutputPath)/archive/Assets" />
      <Copy SourceFiles="@(ModAssets)" DestinationFolder="$(IntermediateOutputPath)/archive/Assets" />
      <ZipDirectory SourceDirectory="$(IntermediateOutputPath)/archive" DestinationFile="$(ExportFolder)/$(TargetName).zip" Overwrite="True"/>
  </Target>

  <Target Name="PrepareReleasePackages" AfterTargets="Build" Condition="'$(Configuration)' == 'Release'">
    <ItemGroup>
      <PluginBinary Include="$(TargetPath)" Condition="Exists('$(TargetPath)')" />
      <PluginDeps Include="$(TargetDir)$(TargetName).deps.json" Condition="Exists('$(TargetDir)$(TargetName).deps.json')" />
      <AssetFiles Include="Assets\**\*.*" />
      <ThunderstoreStatic Include="BuildTemplates/Thunderstore/README.md" />
      <ThunderstoreStatic Include="BuildTemplates/Thunderstore/icon.png" />
    </ItemGroup>

    <Message Text="Packaging Nexus and Thunderstore releases for version $(DistributionVersion)." Importance="High" />

    <RemoveDir Directories="$(NexusPackageRoot)" Condition="Exists('$(NexusPackageRoot)')" />
    <RemoveDir Directories="$(ThunderstorePackageRoot)" Condition="Exists('$(ThunderstorePackageRoot)')" />

    <MakeDir Directories="$(NexusPackageRoot)/BepInEx/plugins" />
    <Copy SourceFiles="@(PluginBinary)" DestinationFolder="$(NexusPackageRoot)/BepInEx/plugins" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(AssetFiles)" DestinationFiles="@(AssetFiles->'$(NexusPackageRoot)/BepInEx/plugins/Assets/%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />

    <MakeDir Directories="$(ThunderstorePackageRoot)" />
    <Copy SourceFiles="@(PluginBinary)" DestinationFolder="$(ThunderstorePackageRoot)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(PluginDeps)" DestinationFolder="$(ThunderstorePackageRoot)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(ThunderstoreStatic)" DestinationFolder="$(ThunderstorePackageRoot)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(AssetFiles)" DestinationFiles="@(AssetFiles->'$(ThunderstorePackageRoot)/plugins/Assets/%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />

    <WriteLinesToFile
      File="$(ThunderstorePackageRoot)/manifest.json"
      Lines="$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/BuildTemplates/Thunderstore/manifest.template.json').Replace('__VERSION__','$(DistributionVersion)'))"
      Overwrite="true"
      Encoding="utf-8" />
  </Target>
</Project>
